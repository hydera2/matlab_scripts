setwd("/Users/amnahyder/Documents/Lab work/AllGraphTheory")
AllData<- read.table("ALL_Data_all.csv", sep = ",", header = TRUE, stringsAsFactors = FALSE)
View(AllData)
str(AllData)
View(AllData)
ggplot(data=AllData) +
geom_boxplot( aes(x=factor(Electrode), y=Clustering.Coefficient, fill=factor(Condition)), position=position_dodge(1)) +ggtitle("Clustering Coefficient")+
scale_x_discrete(breaks=c(1, 2, 3), labels=c("6Month", "12Month", "Baseline"))
library(dplyr)
library(ggplot2)
setwd("/Users/amnahyder/Documents/Lab work/AllGraphTheory")
AllData<- read.table("ALL_Data_all.csv", sep = ",", header = TRUE, stringsAsFactors = FALSE)
str(AllData)
ggplot(data=AllData) +
geom_boxplot( aes(x=factor(Electrode), y=Clustering.Coefficient, fill=factor(Condition)), position=position_dodge(1)) +ggtitle("Clustering Coefficient")+
scale_x_discrete(breaks=c(1, 2, 3), labels=c("6Month", "12Month", "Baseline"))
View(AllData)
View(AllData)
Frontal <- 'F'
AllData1 <- subset(AllData, grepl(Frontal, Electrode) )
View(AllData1)
ggplot(data=AllData1) +
geom_boxplot( aes(x=factor(Electrode), y=Clustering.Coefficient, fill=factor(Condition)), position=position_dodge(1)) +ggtitle("Clustering Coefficient")+
scale_x_discrete(breaks=c(1, 2, 3), labels=c("6Month", "12Month", "Baseline"))
ggplot(data=AllData1) +
geom_violin( aes(x=factor(Electrode), y=Clustering.Coefficient, fill=factor(Condition)), position=position_dodge(1)) +ggtitle("Clustering Coefficient")+
scale_x_discrete(breaks=c(1, 2, 3), labels=c("6Month", "12Month", "Baseline"))
ggplot(data=AllData1) +
geom_point( aes(x=factor(Electrode), y=Clustering.Coefficient, fill=factor(Condition)), position=position_dodge(1)) +ggtitle("Clustering Coefficient")+
scale_x_discrete(breaks=c(1, 2, 3), labels=c("6Month", "12Month", "Baseline"))
GlobalData<- read.table("ALL_Data.csv", sep = ",", header = TRUE, stringsAsFactors = FALSE)
View(GlobalData)
boxplots = list()
violinplots =list()
scatterplots = list()
for (elec in unique(AllData1$Electrode)){
print(elec)
data_to_plot = data.frame(AllData1[AllData1["genes"] == elec,])
PLOTS<-ggplot(data=data_to_plot) +
geom_boxplot( aes(x=factor(Condition), y=Clustering.Coefficient))  + ggtitle(elec)
boxplotsSvD[[elec]] =PLOTS
VPLOTS<-ggplot(data=data_to_plot) +
geom_violin( aes(x=factor(Condition), y=Clustering.Coefficient))  + ggtitle(elec)
violinplotsSvD[[elec]] =VPLOTS
SPLOT<-ggplot(data_to_plot, aes(x=factor(Condition), y=Clustering.Coefficient)) +
geom_point()
scatterplotSvD[[elec]]=SPLOT
}
for (elec in unique(AllData1$Electrode)){
print(elec)
data_to_plot = data.frame(AllData1[AllData1["Electrode"] == elec,])
PLOTS<-ggplot(data=data_to_plot) +
geom_boxplot( aes(x=factor(Condition), y=Clustering.Coefficient))  + ggtitle(elec)
boxplotsSvD[[elec]] =PLOTS
VPLOTS<-ggplot(data=data_to_plot) +
geom_violin( aes(x=factor(Condition), y=Clustering.Coefficient))  + ggtitle(elec)
violinplotsSvD[[elec]] =VPLOTS
SPLOT<-ggplot(data_to_plot, aes(x=factor(Condition), y=Clustering.Coefficient)) +
geom_point()
scatterplotSvD[[elec]]=SPLOT
}
for (elec in unique(AllData1$Electrode)){
print(elec)
data_to_plot = data.frame(AllData1[AllData1["Electrode"] == elec,])
PLOTS<-ggplot(data=data_to_plot) +
geom_boxplot( aes(x=factor(Condition), y=Clustering.Coefficient))  + ggtitle(elec)
boxplots[[elec]] =PLOTS
VPLOTS<-ggplot(data=data_to_plot) +
geom_violin( aes(x=factor(Condition), y=Clustering.Coefficient))  + ggtitle(elec)
violinplots[[elec]] =VPLOTS
SPLOT<-ggplot(data_to_plot, aes(x=factor(Condition), y=Clustering.Coefficient)) +
geom_point()
scatterplots[[elec]]=SPLOT
}
View(violinplots)
View(violinplots)
violinplots(F10)
violinplots.F10
multiplot(plotlist=violinplots,cols=2,rows=3)
multiplot(plotlist=scatterplots,cols=3,rows=2)
multiplot(plotlist=boxplots,cols=3,rows=2)
# Multiple plot function
#
# ggplot objects can be passed in ..., or to plotlist (as a list of ggplot objects)
# - cols:   Number of columns in layout
# - layout: A matrix specifying the layout. If present, 'cols' is ignored.
#
# If the layout is something like matrix(c(1,2,3,3), nrow=2, byrow=TRUE),
# then plot 1 will go in the upper left, 2 will go in the upper right, and
# 3 will go all the way across the bottom.
#
multiplot <- function(..., plotlist=NULL, file, cols=1, layout=NULL) {
library(grid)
# Make a list from the ... arguments and plotlist
plots <- c(list(...), plotlist)
numPlots = length(plots)
# If layout is NULL, then use 'cols' to determine layout
if (is.null(layout)) {
# Make the panel
# ncol: Number of columns of plots
# nrow: Number of rows needed, calculated from # of cols
layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),
ncol = cols, nrow = ceiling(numPlots/cols))
}
if (numPlots==1) {
print(plots[[1]])
} else {
# Set up the page
grid.newpage()
pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))
# Make each plot, in the correct location
for (i in 1:numPlots) {
# Get the i,j matrix positions of the regions that contain this subplot
matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))
print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,
layout.pos.col = matchidx$col))
}
}
}
multiplot(plotlist=violinplots,cols=2,rows=3)
multiplot(plotlist=scatterplots,cols=3,rows=2)
multiplot(plotlist=boxplots,cols=3,rows=2)
VPLOTS<-ggplot(data=data_to_plot) +
geom_violin( aes(x=factor(Condition), y=Clustering.Coefficient))  + ggtitle(elec)
violinplots[[elec]] =VPLOTS
multiplot(plotlist=violinplots,cols=2,rows=3)
multiplot(plotlist=violinplots,cols=3,rows=2)
#plot all of the electrodes seperately
boxplots = list()
violinplots =list()
scatterplots = list()
for (elec in unique(AllData$Electrode)){
print(elec)
data_to_plot = data.frame(AllData[AllData["Electrode"] == elec,])
PLOTS<-ggplot(data=data_to_plot) +
geom_boxplot( aes(x=factor(Condition), y=Clustering.Coefficient))  + ggtitle(elec)
boxplots[[elec]] =PLOTS
VPLOTS<-ggplot(data=data_to_plot) +
geom_violin( aes(x=factor(Condition), y=Clustering.Coefficient))  + ggtitle(elec)
violinplots[[elec]] =VPLOTS
SPLOT<-ggplot(data_to_plot, aes(x=factor(Condition), y=Clustering.Coefficient)) +
geom_point()
scatterplots[[elec]]=SPLOT
}
multiplot(plotlist=violinplots,cols=3,rows=2)
multiplot(plotlist=violinplots,cols=3,rows=10)
AllDataF <- subset(AllData, grepl(Frontal, Electrode) )
AllDataO <- subset(AllData, grepl(-Frontal, Electrode) )
AllDataF <- subset(AllData, grepl(Frontal, Electrode) )
AllDataO <- subset(AllData, grepl(!Frontal, Electrode) )
AllDataF <- subset(AllData, grepl(Frontal, Electrode) )
AllDataO <- subset(AllData, !grepl(Frontal, Electrode) )
View(AllDataO)
View(AllDataO)
View(AllDataO)
knitr::opts_chunk$set(echo = TRUE)
Frontal <- 'F'
AllDataF <- subset(AllData, grepl(Frontal, Electrode) )
Parietal <- 'P'
AllDataP <- subset(AllData, grepl(Parietal, Electrode) )
AllDataO <- subset(AllData, !grepl(Frontal, Electrode) )
AllDataO <- subset(AllDataO, !grepl(Parietal, Electrode) )
View(AllDataP)
View(AllDataO)
knitr::opts_chunk$set(echo = TRUE)
# Multiple plot function
#
# ggplot objects can be passed in ..., or to plotlist (as a list of ggplot objects)
# - cols:   Number of columns in layout
# - layout: A matrix specifying the layout. If present, 'cols' is ignored.
#
# If the layout is something like matrix(c(1,2,3,3), nrow=2, byrow=TRUE),
# then plot 1 will go in the upper left, 2 will go in the upper right, and
# 3 will go all the way across the bottom.
#
multiplot <- function(..., plotlist=NULL, file, cols=1, layout=NULL) {
library(grid)
# Make a list from the ... arguments and plotlist
plots <- c(list(...), plotlist)
numPlots = length(plots)
# If layout is NULL, then use 'cols' to determine layout
if (is.null(layout)) {
# Make the panel
# ncol: Number of columns of plots
# nrow: Number of rows needed, calculated from # of cols
layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),
ncol = cols, nrow = ceiling(numPlots/cols))
}
if (numPlots==1) {
print(plots[[1]])
} else {
# Set up the page
grid.newpage()
pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))
# Make each plot, in the correct location
for (i in 1:numPlots) {
# Get the i,j matrix positions of the regions that contain this subplot
matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))
print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,
layout.pos.col = matchidx$col))
}
}
}
GlobalData<- read.table("ALL_Data.csv", sep = ",", header = TRUE, stringsAsFactors = FALSE)
setwd("/Users/amnahyder/Documents/Lab work/AllGraphTheory")
GlobalData<- read.table("ALL_Data.csv", sep = ",", header = TRUE, stringsAsFactors = FALSE)
library(dplyr)
library(ggplot2)
AllData<- read.table("ALL_Data_all.csv", sep = ",", header = TRUE, stringsAsFactors = FALSE)
str(AllData)
Frontal <- 'F'
AllDataF <- subset(AllData, grepl(Frontal, Electrode) )
Parietal <- 'P'
AllDataP <- subset(AllData, grepl(Parietal, Electrode) )
AllDataO <- subset(AllData, !grepl(Frontal, Electrode) )
AllDataO <- subset(AllDataO, !grepl(Parietal, Electrode) )
#plot all of the electrodes seperately
boxplots = list()
violinplots =list()
scatterplots = list()
for (elec in unique(AllDataP$Electrode)){
print(elec)
data_to_plot = data.frame(AllDataP[AllDataP["Electrode"] == elec,])
PLOTS<-ggplot(data=data_to_plot) +
geom_boxplot( aes(x=factor(Condition), y=Clustering.Coefficient))  + ggtitle(elec)
boxplots[[elec]] =PLOTS
VPLOTS<-ggplot(data=data_to_plot) +
geom_violin( aes(x=factor(Condition), y=Clustering.Coefficient))  + ggtitle(elec)
violinplots[[elec]] =VPLOTS
SPLOT<-ggplot(data_to_plot, aes(x=factor(Condition), y=Clustering.Coefficient)) +
geom_point()
scatterplots[[elec]]=SPLOT
}
multiplot(plotlist=violinplots,cols=3,rows=2)
multiplot(plotlist=scatterplots,cols=3,rows=2)
multiplot(plotlist=boxplots,cols=3,rows=2)
#plot all of the electrodes seperately
boxplots = list()
violinplots =list()
scatterplots = list()
for (elec in unique(AllDataO$Electrode)){
print(elec)
data_to_plot = data.frame(AllDataO[AllDataO["Electrode"] == elec,])
PLOTS<-ggplot(data=data_to_plot) +
geom_boxplot( aes(x=factor(Condition), y=Clustering.Coefficient))  + ggtitle(elec)
boxplots[[elec]] =PLOTS
VPLOTS<-ggplot(data=data_to_plot) +
geom_violin( aes(x=factor(Condition), y=Clustering.Coefficient))  + ggtitle(elec)
violinplots[[elec]] =VPLOTS
SPLOT<-ggplot(data_to_plot, aes(x=factor(Condition), y=Clustering.Coefficient)) +
geom_point()
scatterplots[[elec]]=SPLOT
}
multiplot(plotlist=violinplots,cols=3,rows=2)
multiplot(plotlist=scatterplots,cols=3,rows=2)
multiplot(plotlist=boxplots,cols=3,rows=2)
View(AllData)
View(GlobalData)
View(GlobalData)
str(GlobalData)
str(GlobalData)
ggplot(data=GlobalData) +
geom_boxplot( aes(x=factor(Condition), y=Global.Efficiency))  + ggtitle(elec)
ggplot(data=GlobalData) +
geom_violin( aes(x=factor(Condition), y=Global.Efficiency))  + ggtitle(elec)
ggplot(GlobalData, aes(x=factor(Condition), y=Global.Efficiency)) +
geom_point()
scatterplots[[elec]]=SPLOT
str(GlobalData)
ggplot(data=GlobalData) +
geom_boxplot( aes(x=factor(Condition), y=Global.Efficiency))  + ggtitle('Global.Efficiency')
ggplot(data=GlobalData) +
geom_violin( aes(x=factor(Condition), y=Global.Efficiency))  + ggtitle('Global.Efficiency')
ggplot(GlobalData, aes(x=factor(Condition), y=Global.Efficiency)) +
geom_point() + ggtitle('Global.Efficiency')
str(GlobalData)
#global.efficiency
ggplot(data=GlobalData) +
geom_boxplot( aes(x=factor(Condition), y=Global.Efficiency))  + ggtitle('Global.Efficiency')
ggplot(data=GlobalData) +
geom_violin( aes(x=factor(Condition), y=Global.Efficiency))  + ggtitle('Global.Efficiency')
ggplot(GlobalData, aes(x=factor(Condition), y=Global.Efficiency)) +
geom_point() + ggtitle('Global.Efficiency')
#Density
ggplot(data=GlobalData) +
geom_boxplot( aes(x=factor(Condition), y=Density))  + ggtitle('Density')
ggplot(data=GlobalData) +
geom_violin( aes(x=factor(Condition), y=Density))  + ggtitle('Density')
ggplot(GlobalData, aes(x=factor(Condition), y=Density)) +
geom_point() + ggtitle('Density')
#Modularity
ggplot(data=GlobalData) +
geom_boxplot( aes(x=factor(Condition), y=Modularity))  + ggtitle('Modularity')
ggplot(data=GlobalData) +
geom_violin( aes(x=factor(Condition), y=Modularity))  + ggtitle('Modularity')
ggplot(GlobalData, aes(x=factor(Condition), y=Modularity)) +
geom_point() + ggtitle('Modularity')
#Clustering.Coeff
ggplot(data=GlobalData) +
geom_boxplot( aes(x=factor(Condition), y=Clustering.Coeff))  + ggtitle('Clustering.Coeff')
ggplot(data=GlobalData) +
geom_violin( aes(x=factor(Condition), y=Clustering.Coeff))  + ggtitle('Clustering.Coeff')
ggplot(GlobalData, aes(x=factor(Condition), y=Clustering.Coeff)) +
geom_point() + ggtitle('Clustering.Coeff')
View(AllDataP)
str(AllData)
ggplot(data=AllDataF) +
geom_boxplot( aes(x=factor(Electrode), y=Authority, fill=factor(Condition)), position=position_dodge(1)) +ggtitle("Clustering Coefficient")+
scale_x_discrete(breaks=c(1, 2, 3), labels=c("6Month", "12Month", "Baseline"))
ggplot(data=AllDataF) +
geom_violin( aes(x=factor(Electrode), y=Authority, fill=factor(Condition)), position=position_dodge(1)) +ggtitle("Clustering Coefficient")+
scale_x_discrete(breaks=c(1, 2, 3), labels=c("6Month", "12Month", "Baseline"))
#plot all of the electrodes seperately
boxplots = list()
violinplots =list()
scatterplots = list()
for (elec in unique(AllDataF$Electrode)){
print(elec)
data_to_plot = data.frame(AllDataF[AllDataF["Electrode"] == elec,])
PLOTS<-ggplot(data=data_to_plot) +
geom_boxplot( aes(x=factor(Condition), y=Authority))  + ggtitle(elec)
boxplots[[elec]] =PLOTS
VPLOTS<-ggplot(data=data_to_plot) +
geom_violin( aes(x=factor(Condition), y=Authority))  + ggtitle(elec)
violinplots[[elec]] =VPLOTS
SPLOT<-ggplot(data_to_plot, aes(x=factor(Condition), y=Authority)) +
geom_point()
scatterplots[[elec]]=SPLOT
}
multiplot(plotlist=violinplots,cols=3,rows=2)
multiplot(plotlist=scatterplots,cols=3,rows=2)
multiplot(plotlist=boxplots,cols=3,rows=2)
source('~/.active-rstudio-document', echo=TRUE)
